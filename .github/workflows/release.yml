name: Check for new release of prometheus node exporter and create new release of addon

on:
  schedule:
    - cron: '0 0 * * *'
  workflow_dispatch:

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Get latest release
        id: get_release
        uses: pozetroninc/github-action-get-latest-release@master
        with:
          owner: prometheus
          repo: node_exporter
          excludes: prerelease, draft

      - name: Create release
        id: create_release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.get_release.outputs.release }}
          name: Release ${{ steps.get_release.outputs.release }}
          body: |
            Changes in this Release
            - Updates node exporter binary to version ${{ steps.get_release.outputs.release }}
          draft: false
          prerelease: false

      - name: Download release
        id: download_release
        uses: robinraju/release-downloader@v1
        with:
          tag: ${{ steps.get_release.outputs.release }}
          tarBall: true
          extract: true

      - name: Download assets
        id: download_assets
        uses: robinraju/release-downloader@v1
        with:
          repository: 'prometheus/node_exporter'
          tag: ${{ steps.get_release.outputs.release }}
          fileName: 'node_exporter*.tar.gz'

      - name: Create assets
        id: create_assets
        run: |
          for file in node_exporter*.tar.gz; do
            filename=${file##*/}
            tar -xzvf $file
            rm $file
            mkdir -p ${{ steps.get_release.outputs.release }}/bin
            mv $filename/node_exporter ${{ steps.get_release.outputs.release }}bin/node_exporter
            tar -czvf $file ${{ steps.get_release.outputs.release }}
          done;

      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v2
        with:
          file_glob: true
          file: node_exporter*.tar.gz
          tag: ${{ steps.get_release.outputs.release }}
          overwrite: true
